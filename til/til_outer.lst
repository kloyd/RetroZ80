                        ; *****  TIL
                        ; Outer Interpreter
                        ; Author Kelly Loyd
                        ; Target System
                        ;   Z80 CP/M 64K RAM
                        ; ***

                        ;---------- Put in CP/M Transient Memory space.
0100                    	ORG	100h

                        ;---------- START/RESTART
0100  11 C302           START	LD	DE,RSTMSG
0103  3A 3B02           	LD	A,(BASE)
0106  A7                	AND	A
0107  20 08             	JR	NZ, ABORT
0109  3E 0A             	LD	A,10
010B  32 3B02           	LD	(BASE),A
010E  11 D002           	LD	DE,SRTMSG
0111  31 0080           ABORT	LD	SP,STACK
0114  D5                	PUSH	DE
0115  21 0000           	LD	HL,0
0118  22 3C02           	LD	(MODE),HL
011B  FD21 4701         	LD	IY,NEXT
011F  DD21 F601         	LD	IX,RETURN
0123  21 8080           	LD	HL,8080h
0126  22 3F02           	LD	(LBEND),HL
0129  01 2F01           	LD	BC,OUTER	; Effectively, Set OUTER as the next routine
012C  C3 4701           	JP	NEXT		; Call NEXT in the Inner Interpreter, which will load address of OUTER and Jump to it.

                        ; Entry point of OUTER interpreter.
012F  6101              OUTER	DW	TYPE
0131  7501              	DW	INLINE
0133  CD01              	DW	ASPACE
0135  CD01              	DW	TOKEN
0137  CD01              	DW 	QSEARCH	; Leaves something on the stack if found or not found?
0139  D701              	DW	@IF

                        ; --------- Inner Interpreter
013B  3D01              SEMI	DW	$ + 2
013D  DD4E 00           	LD	C,(IX+0)
0140  DD23              	INC	IX
0142  DD46 00           	LD	B,(IX+0)
0145  DD23              	INC	IX
0147  0A                NEXT	LD	A,(BC)	; BC = Instruction Register
0148  6F                	LD	L,A	; @I -> WA (HL = word address)
0149  03                	INC	BC
014A  0A                	LD	A,(BC)
014B  67                	LD	H,A
014C  03                	INC	BC	; I = I + 2
014D  5E                RUN	LD	E,(HL)	; @WA -> CA (Code Address)
014E  23                	INC	HL	; WA = WA + 2
014F  56                	LD	D,(HL)
0150  23                	INC	HL
0151  EB                	EX	DE,HL	; CA -> PC
0152  E9                	JP	(HL)

0153  DD2B              COLON	DEC	IX
0155  DD70 00           	LD	(IX+0),B
0158  DD2B              	DEC	IX
015A  DD71 00           	LD	(IX+0),C
015D  4B                	LD	C,E
015E  42                	LD	B,D
015F  FDE9              	JP	(IY)
                        ;----------- End of Inner -----

                        ; TYPE - String with length byte (0a1234567890) printed to console.
0161  6301              TYPE	DW	$ + 2
0163  D1                TYPEIT	POP	DE	; get address of string
0164  E5                	PUSH	HL 	; save WA
0165  C5                	PUSH	BC	; Save IR.
0166  EB                	EX	DE,HL
0167  46                	LD	B,(HL)
0168  23                	INC	HL
0169  7E                ONECHAR	LD	A,(HL)
016A  CD 0E02           	CALL	_ECHO
016D  23                	INC	HL
016E  10 F9             	DJNZ	ONECHAR
0170  C1                	POP	BC	; Restore IR
0171  E1                	POP	HL	; Restore WA
0172  C3 4701           	JP	NEXT




                        ; INLINE
0175  7701              INLINE	DW	$ + 2	;header address
0177  C5                	PUSH	BC	; Save IR
0178  CD 2E02           ISTART	CALL	_CRLF	; Issue CR / LF on terminal for new input
017B  21 BF02           	LD	HL, LBADD	; Buffer
017E  22 3D02           	LD	(LBP), HL
0181  06 80             	LD	B, LENGTH
0183  36 20             CLEAR	LD	(HL), SPACE
0185  23                	INC	HL
0186  10 FB             	DJNZ	CLEAR
0188  2E 00             ZERO	LD	L,0
018A  CD 1C02           INKEY	CALL	_KEY
018D  FE 18             	CP	LINEDEL		; CTRL-X is Line Delete
018F  20 05             	JR	NZ,TSTBS
0191  CD 0E02           	CALL	_ECHO
0194  18 E2             	JR ISTART
0196  FE 08             TSTBS	CP	BKSP		; backspace CTRL-H
0198  20 0B             	JR	NZ, TSTCR
019A  2B                	DEC	HL
019B  FA 8801           	JP	M,ZERO
019E  36 20             	LD	(HL), SPACE
01A0  CD 0E02           ISSUE	CALL	_ECHO
01A3  18 E5             	JR	INKEY
01A5  FE 0D             TSTCR	CP	CR
01A7  28 1C             	JR	Z,LAST1
01A9  CB7D              	BIT	7,L
01AB  20 0E             	JR	NZ,IEND
01AD  77                SAVEIT	LD	(HL),A
01AE  FE 61             	CP	61H	; Less than LC A ?
01B0  38 06             	JR	C,NOTLC
01B2  FE 7B             	CP	7BH	; MORE THAN LC Z?
01B4  30 02             	JR	NC,NOTLC
01B6  CBAE              	RES	5,(HL)
01B8  2C                NOTLC	INC	L
01B9  18 E5             	JR	ISSUE
01BB  2D                IEND	DEC	L
01BC  4F                	LD	C,A
01BD  3E 08             	LD	A,BKSP
01BF  CD 0E02           	CALL	_ECHO
01C2  79                	LD	A,C
01C3  18 E8             	JR 	SAVEIT
01C5  3E 20             LAST1	LD	A, SPACE
01C7  CD 0E02           	CALL	_ECHO
01CA  C1                	POP	BC
01CB  FDE9              	JP	(IY)	; Return to NEXT inner interpreter.


01CD                    ASPACE

01CD                    TOKEN

01CD                    QSEARCH

                        ; ABSENT?
                        ; - NO -> ?EXECUTE -> ASPACE
                        ; - YES -> NUMBER

01CD  CF01              QEXECUTE	DW $ + 2
01CF  00                	NOP
01D0  FDE9              	JP (IY)

01D2  D401              QNUMBER		DW $ + 2
01D4  00                	NOP
01D5  FDE9              	JP (IY)

01D7  D901              @IF	DW $ + 2
01D9  00                	NOP
01DA  FDE9              	JP (IY)

                        ; INVALID NUMBER?
                        ; NO -> ASPACE
                        ; YES -> QUESTION

                        ; QUESTION
01DC  DE01              QUESTION	DW	$ + 2
01DE  2A C102           	LD 	HL,(DP)
01E1  23                	INC 	HL
01E2  CB7E              	BIT	7,(HL)	; IF BIT SET, A TERMINATOR
01E4  28 06             	JR	Z,ERROR	;NOT SET ERROR
01E6  11 FE01           	LD	DE,OK
01E9  D5                	PUSH	DE
01EA  FDE9              	JP	(IY)
01EC  CD 2E02           ERROR	CALL	_CRLF
01EF  FD21 F601         	LD	IY,RETURN
01F3  C3 6101           	JP	TYPE
01F6  11 FC01           RETURN	LD	DE, QMSG
01F9  C3 0102           	JP	_PATCH

                        ; GOTO TYPE


                        ; Internals

01FC  3F00              QMSG	DB	'?', 0
01FE  4F4B00            OK	DB	'OK',0

                        ; PATCH internal routine.
0201  00                _PATCH	DB	0



                        ; EXECUTE primitive needs a dictionary entry for defining words.
                        ; This is a model for all other Primitive words that will be added to the dictionary
                        ;
0202  07455845          	DB	7,'E','X','E'	; Header for dictionary search
0206  0000              	DW	0		; Link address 0000 == End of Linked List.
0208  0A02              EXECUTE DW	$ + 2		; Address of EXECUTE.
020A  E1                	POP	HL		; primitive code.
020B  C3 4D01           	JP	RUN

                        ;----------------------------------------
                        ; CP/M Machine Specific routines
                        ;
                        ; *   Internal Routines interfacing with Operating System.
                        ; * _ECHO - Echo a character to terminal
                        ; * _KEY - Read a key from terminal
                        ; * _CRLF - Output CR/LF to terminal
                        ;----------------------------------------
                        ;; Handy Constants
      = 000D            CR	EQU     0DH
      = 000A            LF	EQU     0AH
      = 0024            DOLLAR  EQU     24H
      = 001B            ESC     EQU     1BH
      = 0003            CTRLC   EQU     03H

                        ; Screen print calls
      = 0003            CHAR_IN EQU     03H
      = 000B            C_STAT  EQU     0BH
      = 0006            C_RAWIO EQU     06H

                        ; til has own write str using _ECHO
                        ;WRITESTR        EQU     9H
      = 0002            PRTCHR  EQU     02H
      = 0005            BDOS    EQU     05H

                        ; Output one character.
                        ; A = Input Char.
                        ; preserve BC register.
                        ; preserve HL register.
020E                    _ECHO
020E  E5                	PUSH HL
020F  C5                        PUSH BC
0210  D5                	PUSH DE
0211  57                	LD D,A
0212  5F                	LD E,A
0213  0E 02                     LD C, PRTCHR
0215  CD 0500                   CALL BDOS
0218  D1                        POP DE
0219  C1                	POP BC
021A  E1                	POP HL
021B  C9                        RET

                        ; Get a key
021C                    _KEY
                        ; Preserve BC, DE, and HL.
021C  C5                        PUSH	BC
021D  D5                        PUSH	DE
021E  E5                	PUSH	HL
021F  0E 06             WAITKEY LD	C, C_RAWIO
0221  11 FFFF                   LD	DE,FFFFh
0224  CD 0500                   CALL    BDOS
0227  B7                        OR 	A
0228  28 F5                     JR 	Z,WAITKEY
022A  E1                	POP	HL
022B  D1                        POP	DE
022C  C1                        POP	BC
                        ; Character returned in A register.
022D  C9                        RET

                        ; Output CR LF to console.
022E                    _CRLF
022E  F5                	PUSH AF
022F  3E 0D             	LD A, CR
0231  CD 0E02           	CALL _ECHO
0234  3E 0A             	LD A, LF
0236  CD 0E02           	CALL _ECHO
0239  F1                	POP AF
023A  C9                        RET

                        ; Constants
                        ;
      = 0018            LINEDEL	EQU	18H	; ctrl-x line delete
      = 0020            SPACE	EQU	20h	; space
      = 0008            BKSP	EQU	08h	; ctrl-H backspace

                        ; Variables
023B  00                BASE	DB	0	; BASE for restart/warm start
023C  00                MODE	DB	0	; MODE
023D  0000              LBP	DW	0 	; line buffer pointer
      = 0080            LENGTH	EQU	128	; buffer length
023F   (0080)           LBEND	DS	128	; text input buffer
02BF  0000              LBADD	DW	0

                        ; Dictonary pointer
02C1  0000              DP	DW	0
      = 8000            STACK	EQU	8000h

                        ; Strings
02C3  0C205449 4C205245 RSTMSG	DB	12, ' TIL RESTART'
02CB  53544152 54
02D0  15205745 4C434F4D SRTMSG	DB	21, ' WELCOME TO RETRO TIL'
02D8  4520544F 20524554
02E0  524F2054 494C

                        ; Stack grows down... set this at 8000 for cpm
                        ;	ORG	4000h
                        ;STK	DS	255
                        ;STACK	DB	0





02E6   (0000)           	END	0000

@IF                01D7    ABORT              0111    ASPACE             01CD
BASE               023B    BDOS               0005 E  BKSP               0008 E
CHAR_IN            0003 E  CLEAR              0183    COLON              0153
CR                 000D E  CTRLC              0003 E  C_RAWIO            0006 E
C_STAT             000B E  DOLLAR             0024 E  DP                 02C1
ERROR              01EC    ESC                001B E  EXECUTE            0208
IEND               01BB    INKEY              018A    INLINE             0175
ISSUE              01A0    ISTART             0178    LAST1              01C5
LBADD              02BF    LBEND              023F    LBP                023D
LENGTH             0080 E  LF                 000A E  LINEDEL            0018 E
MODE               023C    NEXT               0147    NOTLC              01B8
OK                 01FE    ONECHAR            0169    OUTER              012F
PRTCHR             0002 E  QEXECUTE           01CD    QMSG               01FC
QNUMBER            01D2    QSEARCH            01CD    QUESTION           01DC
RETURN             01F6    RSTMSG             02C3    RUN                014D
SAVEIT             01AD    SEMI               013B    SPACE              0020 E
SRTMSG             02D0    STACK              8000 E  START              0100
TOKEN              01CD    TSTBS              0196    TSTCR              01A5
TYPE               0161    TYPEIT             0163    WAITKEY            021F
ZERO               0188    _CRLF              022E    _ECHO              020E
_KEY               021C    _PATCH             0201
